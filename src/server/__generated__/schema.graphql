type Query {
  aggregateTodoItem(where: TodoItemWhereInput, orderBy: [TodoItemOrderByWithRelationInput!], cursor: TodoItemWhereUniqueInput, take: Int, skip: Int): AggregateTodoItem!
  findFirstTodoItem(where: TodoItemWhereInput, orderBy: [TodoItemOrderByWithRelationInput!], cursor: TodoItemWhereUniqueInput, take: Int, skip: Int, distinct: [TodoItemScalarFieldEnum!]): TodoItem
  findFirstTodoItemOrThrow(where: TodoItemWhereInput, orderBy: [TodoItemOrderByWithRelationInput!], cursor: TodoItemWhereUniqueInput, take: Int, skip: Int, distinct: [TodoItemScalarFieldEnum!]): TodoItem
  todoItems(where: TodoItemWhereInput, orderBy: [TodoItemOrderByWithRelationInput!], cursor: TodoItemWhereUniqueInput, take: Int, skip: Int, distinct: [TodoItemScalarFieldEnum!]): [TodoItem!]!
  todoItem(where: TodoItemWhereUniqueInput!): TodoItem
  getTodoItem(where: TodoItemWhereUniqueInput!): TodoItem
  groupByTodoItem(where: TodoItemWhereInput, orderBy: [TodoItemOrderByWithAggregationInput!], by: [TodoItemScalarFieldEnum!]!, having: TodoItemScalarWhereWithAggregatesInput, take: Int, skip: Int): [TodoItemGroupBy!]!
}

type AggregateTodoItem {
  _count: TodoItemCountAggregate
  _min: TodoItemMinAggregate
  _max: TodoItemMaxAggregate
}

type TodoItemCountAggregate {
  id: Int!
  text: Int!
  complete: Int!
  hidden: Int!
  createdAt: Int!
  updatedAt: Int!
  _all: Int!
}

type TodoItemMinAggregate {
  id: String
  text: String
  complete: Boolean
  hidden: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type TodoItemMaxAggregate {
  id: String
  text: String
  complete: Boolean
  hidden: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input TodoItemWhereInput {
  AND: [TodoItemWhereInput!]
  OR: [TodoItemWhereInput!]
  NOT: [TodoItemWhereInput!]
  id: StringFilter
  text: StringFilter
  complete: BoolFilter
  hidden: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input TodoItemOrderByWithRelationInput {
  id: SortOrder
  text: SortOrder
  complete: SortOrder
  hidden: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

input TodoItemWhereUniqueInput {
  id: String
  AND: [TodoItemWhereInput!]
  OR: [TodoItemWhereInput!]
  NOT: [TodoItemWhereInput!]
  text: StringFilter
  complete: BoolFilter
  hidden: BoolFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

type TodoItem {
  id: String!
  text: String!
  complete: Boolean!
  hidden: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum TodoItemScalarFieldEnum {
  id
  text
  complete
  hidden
  createdAt
  updatedAt
}

type TodoItemGroupBy {
  id: String!
  text: String!
  complete: Boolean!
  hidden: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  _count: TodoItemCountAggregate
  _min: TodoItemMinAggregate
  _max: TodoItemMaxAggregate
}

input TodoItemOrderByWithAggregationInput {
  id: SortOrder
  text: SortOrder
  complete: SortOrder
  hidden: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  _count: TodoItemCountOrderByAggregateInput
  _max: TodoItemMaxOrderByAggregateInput
  _min: TodoItemMinOrderByAggregateInput
}

input TodoItemCountOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  complete: SortOrder
  hidden: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TodoItemMaxOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  complete: SortOrder
  hidden: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TodoItemMinOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  complete: SortOrder
  hidden: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

input TodoItemScalarWhereWithAggregatesInput {
  AND: [TodoItemScalarWhereWithAggregatesInput!]
  OR: [TodoItemScalarWhereWithAggregatesInput!]
  NOT: [TodoItemScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  text: StringWithAggregatesFilter
  complete: BoolWithAggregatesFilter
  hidden: BoolWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input BoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedBoolFilter
  _max: NestedBoolFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

type Mutation {
  createOneTodoItem(data: TodoItemCreateInput!): TodoItem!
  deleteManyTodoItem(where: TodoItemWhereInput): AffectedRowsOutput!
  deleteOneTodoItem(where: TodoItemWhereUniqueInput!): TodoItem
  updateManyTodoItem(data: TodoItemUpdateManyMutationInput!, where: TodoItemWhereInput): AffectedRowsOutput!
  updateOneTodoItem(data: TodoItemUpdateInput!, where: TodoItemWhereUniqueInput!): TodoItem
  upsertOneTodoItem(where: TodoItemWhereUniqueInput!, create: TodoItemCreateInput!, update: TodoItemUpdateInput!): TodoItem!
}

input TodoItemCreateInput {
  id: String
  text: String!
  complete: Boolean!
  hidden: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
}

type AffectedRowsOutput {
  count: Int!
}

input TodoItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  complete: BoolFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input TodoItemUpdateInput {
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  complete: BoolFieldUpdateOperationsInput
  hidden: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}
